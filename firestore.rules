rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Trips collection
    match /trips/{tripId} {
      // Only owner can edit trip
      allow read: if request.auth != null;
      allow create: if request.auth.uid != null;
      allow delete: if request.auth.uid == resource.data.ownerId;
      allow update: if request.auth.uid == resource.data.ownerId;

      // Subcollection: participants
      match /participants/{participantId} {
        allow read: if request.auth != null;

        // Owner can add/remove anyone, or participant can remove their own
        allow delete: if participantId != get(/databases/$(database)/documents/trips/$(tripId)).data.ownerId
              && (
                request.auth.uid == participantId
                || request.auth.uid == get(/databases/$(database)/documents/trips/$(tripId)).data.ownerId
              );
                      
        allow update: if request.auth.uid == get(/databases/$(database)/documents/trips/$(tripId)).data.ownerId;

        allow create: if request.auth.uid == get(/databases/$(database)/documents/trips/$(tripId)).data.ownerId;
      }
      
      match /events/{eventId} {
        // Any signed-in user can read events
        allow read: if request.auth != null;
        // Only trip owner can write (create, update, delete) events
        allow write: if request.auth.uid == get(/databases/$(database)/documents/trips/$(tripId)).data.ownerId;
      }
    }
  }
}